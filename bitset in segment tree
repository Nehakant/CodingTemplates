#include<bits/stdc++.h>
#define ll long long int
using namespace std;
ll arr1[100005],arr2[100005];
bitset<5005>seg1[400005],seg2[400005];


void build(ll node,ll low,ll high)
{
	if(low==high)
	{
		seg1[node][arr1[low]]=1;
		seg2[node][arr2[low]]=1;
		cout<<node<<" ";
		return;
		
		
	}
	if(low>high)
	return;
	ll mid=(low+high)>>1;
	
	build(2*node+1,low,mid);
	
	build(2*node+2,mid+1,high);
	
	seg1[node]=seg1[2*node+1]|seg1[2*node+2];
	seg2[node]=seg2[2*node+1]|seg2[2*node+2];
	
	
	
}

bitset<5005> sum1(ll node,ll low,ll high,ll l,ll r)
{
	if(l>high||r<low||low>high)
	{
		bitset<5005>temp;
	//	temp.reset();
		return temp;
		
		
		
	}
	if(l<=low&&r>=high)
	return seg1[node];
	
	ll mid=(low+high)>>1;
	bitset<5005>temp1=sum1(2*node+1,low,mid,l,r);
	
	bitset<5005>temp2=sum1(2*node+2,mid+1,high,l,r);
	
	bitset<5005>temp3=temp1|temp2;
	
	return temp3;
	
	
	
}
bitset<5005> sum2(ll node,ll low,ll high,ll l,ll r)
{
	if(l>high||r<low||low>high)
	{
		bitset<5005>temp;
	//	temp.reset();
		return temp;
		
		
		
	}
	if(l<=low&&r>=high)
	return seg2[node];
	
	ll mid=(low+high)>>1;
	bitset<5005>temp1=sum2(2*node+1,low,mid,l,r);
	
	bitset<5005>temp2=sum2(2*node+2,mid+1,high,l,r);
	
	bitset<5005>temp3=temp1|temp2;
	
	return temp3;
	
	
	
}




int main()
{
	ll n,m,i,j,q,a,b,c,d;
	cin>>n;
	
	for(i=0;i<n;i++)
	{
		cin>>arr1[i];
	}
	
	for(i=0;i<n;i++)
	{
		cin>>arr2[i];
	}
	
	build(0,0,n-1);
	cin>>q;
	while(q--)
	{
		cin>>a>>b>>c>>d;
		
		a--;
		b--;
		c--;
		d--;
		bitset<5005>ans1=sum1(0,0,n-1,a,b);

		bitset<5005>ans2=sum2(0,0,n-1,c,d);
	
		bitset<5005>ans=ans1|ans2;
		
		cout<<ans.count()<<endl;

		
		
	}

	
	
}
