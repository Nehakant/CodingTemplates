#include<bits/stdc++.h>
#define ll long long int
using namespace std;
#define fio ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL)
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define endl "\n"
#define maxpq priority_queue<ll>
#define minpq priority_queue<ll, vector<ll>, greater<ll> >
#define vi vector<ll>
#define pii pair<ll, ll>
#define vii vector<pii>
#define for0(i, n) for (int i = 0; i < n; i++)
#define for1(i, n) for (int i = 1; i <= n; i++)
#define loop(i,a,b) for (int i = a; i < b; i++)
#define bloop(i,a,b) for (int i = a ; i>=b;i--)
#define MOD 1000000007
#define INT_MAXI 9000000000000000000
const int dx[4] = { -1, 1, 0, 0};
const int dy[4] = {0, 0, -1, 1};
int XX[] = { -1, -1, -1, 0, 0, 1, 1, 1 };
int YY[] = { -1, 0, 1, -1, 1, -1, 0, 1 };

ll n,k;
ll arr[200005];
ll seg[8000005];

void build(ll node,ll low,ll high)
{
	if(low==high)
	{
		seg[node]=arr[low]%k;
		return ;
	}
	ll mid=(low+high)>>1;
	
	build(2*node+1,low,mid);
	build(2*node+2,mid+1,high);
	
	seg[node]=(seg[2*node+1]*seg[2*node+2])%k;
	
	
}

ll query(ll node,ll low,ll high,ll l,ll r)
{
	if(low>r||high<l||low>high)
	return 1;
	
	if(low>=l&&high<=r)
	return seg[node]%k;
	
	ll mid=(low+high)>>1;
	
	ll x=query(2*node+1,low,mid,l,r);
	
	ll y=query(2*node+2,mid+1,high,l,r);
	
	return (x*y)%k;
	
	
	
	
}


int main()
{
  
	fio;
     ll i,j;
     cin>>n>>k;
     for(i=0;i<n;i++)
     {
     	cin>>arr[i];
	 }
	 
	 build(0,0,n-1);
     ll count=0;
     for(i=0;i<n;i++)
     {
     	ll low=i,high=n-1;
     	while(low<=high)
     	{
     		ll mid=(low+high)>>1;
     		
     		if(query(0,0,n-1,i,mid)==0)
     		high=mid-1;
     		else
     		low=mid+1;
     		
     		
		 }
		 count+=(n-low);
     	
     	
	 }
	 cout<<count;
	
	
	

	
    	
}








